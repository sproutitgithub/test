pipeline {
    agent any

    stages {
        stage('Delprof2 WorkAround') {
            steps {
                echo 'Copying over Delprof2 to all RDS PVS Servers'
                echo "${env.WORKSPACE}"
                echo ""
            }
        }
        /*
        stage('Pull Git') {
            steps {
                PullGit()
            }
        }
        */
        stage('Step1') {
            steps {
                Step1() 
           // sh 'false'    
            }
        }
        stage('Step2') {
            steps {
                Step2() 
           // sh 'false'    
            }
        }
        stage('Step3') {
            steps {
                Step3() 
           // sh 'false'    
            }
        }
        stage('Step4') {
            steps {
                Step4() 
           // sh 'false'    
            }
        }
        stage('Step5') {
            steps {
                Step5() 
           // sh 'false'    
            }
        }
        stage('Step6') {
            steps {
                Step6() 
           // sh 'false'    
            }
        }
        stage('Step7') {
            steps {
                Step7() 
           // sh 'false'    
            }
        }

    }
}



// steps
// steps

/*
def PullGit() {
    def err = null
      try {
        git branch: 'main', credentialsId: 'f495bb99-db9e-4896-8601-3a171f50d275', url: 'https://github.com/sproutitgithub/test.git'
      } catch(Exception ex) {
         println(ex.message);
         if (ex){
            throw ex
            println ("Failed in Test")
         }
      
      }
		
}
*/
def Step1() {
    def err = null
    def pspath0 = "${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step1.ps1"
      try {
         echo "About to Launch ${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step1.ps1"
         sleep 2
        powershell pspath0
      } catch(Exception ex) {
         println(ex.message);
         if (ex){
            throw ex
            println ("Failed in Step1")
         }
      
      }
		
}

def Step2() {
    def err = null
    def pspath0 = "${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step2.ps1"
      try {
         echo "About to Launch ${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step2.ps1"
         sleep 2
        powershell pspath0
      } catch(Exception ex) {
         println(ex.message);
         if (ex){
            throw ex
            println ("Failed in Step2")
         }
      
      }
		
}

def Step3() {
    def err = null
    def pspath0 = "${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step3.ps1"
      try {
         echo "About to Launch ${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step3.ps1"
         sleep 2
        powershell pspath0
      } catch(Exception ex) {
         println(ex.message);
         if (ex){
            throw ex
            println ("Failed in Step3")
         }
      
      }
		
}

def Step4() {
    def err = null
    def pspath0 = "${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step4.ps1"
      try {
         echo "About to Launch ${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step4.ps1"
         sleep 2
        powershell pspath0
      } catch(Exception ex) {
         println(ex.message);
         if (ex){
            throw ex
            println ("Failed in Step4")
         }
      
      }
		
}

def Step5() {
    def err = null
    def pspath0 = "${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step5.ps1"
      try {
         echo "About to Launch ${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step5.ps1"
         sleep 2
        powershell pspath0
      } catch(Exception ex) {
         println(ex.message);
         if (ex){
            throw ex
            println ("Failed in Step5")
         }
      
      }
		
}

def Step6() {
    def err = null
    def pspath0 = "${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step6.ps1"
      try {
         echo "About to Launch ${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step6.ps1"
         sleep 2
        powershell pspath0
      } catch(Exception ex) {
         println(ex.message);
         if (ex){
            throw ex
            println ("Failed in Step6")
         }
      
      }
		
}

def Step7() {
    def err = null
    def pspath0 = "${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step7.ps1"
      try {
         echo "About to Launch ${env.WORKSPACE}\\${env.JOB_NAME}\\Script-Delprof2-WorkAround-Step7.ps1"
         sleep 2
        powershell pspath0
      } catch(Exception ex) {
         println(ex.message);
         if (ex){
            throw ex
            println ("Failed in Step7")
         }
      
      }
		
}